import { getTicks } from '../../src/util/TickUtils';

// These tests have been generated by merely documenting existing behaviour.
// They will be used to verify that any refactoring does not break the existing behaviour.
describe('getTicks', () => {
  test('happy path', () => {
    const input = {
      axisLine: true,
      height: 50,
      interval: 'preserveEnd' as const,
      label: 'test',
      minTickGap: 5,
      mirror: false,
      orientation: 'bottom' as const,
      stroke: '#666',
      tick: true,
      tickLine: true,
      tickMargin: 2,
      tickSize: 6,
      ticks: [
        { value: 10, coordinate: 50 },
        { value: 1000, coordinate: 100 },
        { value: 20, coordinate: 150 },
        { value: 40, coordinate: 200 },
        { value: 90, coordinate: 250 },
      ],
      length: 5,

      viewBox: { x: 0, y: 0, width: 500, height: 500 },
      width: 400,
      x: 0,
      y: 100,
    };

    const result = getTicks(input);

    expect(result).toEqual([
      { value: 10, coordinate: 50, tickCoord: 50, isShow: true },
      { value: 1000, coordinate: 100, tickCoord: 100, isShow: true },
      { value: 20, coordinate: 150, tickCoord: 150, isShow: true },
      { value: 40, coordinate: 200, tickCoord: 200, isShow: true },
      { value: 90, coordinate: 250, tickCoord: 250, isShow: true },
    ]);
  });
});
